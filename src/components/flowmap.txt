Load Home Page
presetn get auth button
on button press
send to spotify auth 
return to Home
present categories
on slecection
init player(with no tracks loaded) & getPlayerId fetch & getPlaylist ftech 
draw start button
on button press
init loaded player & getTrackInfo fetch & draw buzzer button
on press
stop playback fetch & draw anser form with submit button
on submit
compare input answer to track info retrieved on 10
inform weather right or wrong with modal
on close button press
go to 9
loop until time is gone


rock playlist
6TeyryiZ2UEf3CbLXyztFA

Things to add 3.24

revisit the login and register and not registered error
**rename components to include main screen being /**3.25
**music starts immediately on game screen load()** complications with library spotify player. Instead. Defined another modal to start game on click.Timer as well******3.25
***create a right and wrong answer feedback for user****BONUS Cleared inpouts on submits(3.25)
****redesign end game modal*********

3.26
*****add other playlists for other categories(in place, having trouble adding variables to body of put however, seek asistance)
add input labels

*****create a username field to use instead of email******
create a high score list
add dark background colors to app components
Do something with the select screen
visualize the music playing or add a looping space video in a modal that only runs as music plays 
shuffle the playlists (may need to create a custom array of songs instead of relying on the actual playlist)
-add carousel at select page
circular countdown timer to game screen

Bonus **
track players games
track player starts
enable "add to playlist " fx



-first screen: tell people to choose a category
--choose a category, then modal should tell people "here's what you chose," random pic frm that catalog, description of the category, option to go back to choose another category or proceed.

var raw = `{\r\n  \"uris\":[${trackUri}]\,\r\n  \"offset\": {\r\n    \"position\": 0\r\n  },\r\n  \"position_ms\": 0\r\n}`;


{
  "uris":["spotify:track:62ZRHYSOIT9WeZnz18kTHS","spotify:track:4XnHspRrJJF8djTzHBJVhJ","spotify:track:2KEu2z1f7TakR3KY4jGLzl","spotify:track:5lxDdFXillBqYvKe9gsYT1","spotify:track:6VPQjeZ3WUVZ2ge2qR2laU","spotify:track:3zyj0RajXg2w2Bnn773mnW","spotify:track:6o7BCdJjGvHBBPMb4ZrA68","spotify:track:1OmKo4t4Bh95xQI6WGiUR3","spotify:track:7FsM2MPjPCdgYld4NsvO0f","spotify:track:4H2TRR9FjnnIwxGnIt9stO","spotify:track:3mM14WXoPaLRjjkmxHe99L","spotify:track:5B7f2auRhwkl5OjC2bQ58f","spotify:track:7ySh3j4kcq2mtxfjshPJSG","spotify:track:0dlNwpfDzFIKdtuJSnHbzK","spotify:track:51EKPuV1uAWryjNMqZLtgJ","spotify:track:7BjmEKAVTnJNkRNaUzBy2K","spotify:track:5fv9qtXwNV6Xx3P9bRed5i","spotify:track:0BM8wPzuihqUE561Poj2b7","spotify:track:29ZJSsfmcSJcShl44iXuP1","spotify:track:1wtcyTExLF8nZu9ZphHIl1","spotify:track:0mG66FLhO0iZ6XCAGdjpax","spotify:track:2elArKzloacigjiGat97QZ","spotify:track:4BcrWCZPXuoGU0SnAsJW1s","spotify:track:79gYsiFPJ8x6ofr656fVIP","spotify:track:5MkOctZG8LI9uHzpY7ncWj","spotify:track:4wDpjRQOvOHXE9AtNWpdVQ","spotify:track:7HdSVjZimbY8w0DX8aHLMv","spotify:track:6ORuFMNsVti1by7vkgDdVK","spotify:track:1KeWCjmGE74qeB3OSbB5Ax","spotify:track:1O2AIet2IjgK6A4vrJQPAK","spotify:track:0u1mi4pYlXkx0rxgCbtyqv","spotify:track:7tSZJ9iI3634Sqtd6Uvl49","spotify:track:2Nj2RTsHJsBKZaCuKQqcg8","spotify:track:3cPgnLawNeUl9YsZIBdsrs","spotify:track:58hXpQTyQLiskPd5XiLzFQ","spotify:track:1ADDagtKH24eNO8eJ6II6j","spotify:track:3onPZQxZ9igu7plus3rK7D","spotify:track:6m7HjxgVcktBJIwOBG8r4F","spotify:track:4TnUKixNWMfajncgdSwFoi","spotify:track:6NaQDBNUP6LcsZklHizAki","spotify:track:3HtCJiLV8GH87AViMtUKhO","spotify:track:2zPIhmitmDGUjW1JQQ1PeG","spotify:track:6uvT4Di9ZRBw5cbexZJDts","spotify:track:0lNLXEMPtGhEpbgwQfo0c1","spotify:track:7dwgvrv1SrryEYG2MMNuXN","spotify:track:2XQUerfdDAi7Ncla2a4skr","spotify:track:4VF5XIZ7EiMfLElRzYG2E8","spotify:track:4OpB5ExXiVjj1f3gMfTw4u","spotify:track:0RbaD2rw0HmpfflXFH9DKu","spotify:track:4XZzz3KpYL7TSzRmSaIuiE","spotify:track:0qXfGGfWguEHZ4jESyNKFP","spotify:track:7xRind9RPsvGHWR0qbGmfE","spotify:track:7hBrO5jpSGEbd9X6zxGxQI","spotify:track:2hckAvL66faAcR0Fk64hj6","spotify:track:0uTVChzibEWKrXojPaJ9y1","spotify:track:1Eu8T7TxbcrlZ1oE8Eccxd","spotify:track:337nQ3zcZ5Ka2JmMMlR7bU","spotify:track:7fw6XQdMN9BszacQxoz4gZ","spotify:track:7MYCBhcWtRSJ7YXTfIHlI8","spotify:track:6PzCKkM1FLgIVCaAQkKyuZ","spotify:track:17zj9e1nYLJaKjqKuwWCht","spotify:track:5wsa5z6Vfq0gjaC32X4hAG","spotify:track:3EFgVWb1TAYP3CF17BB4fU","spotify:track:7ITL5IjLVR683ZDNGpDqek","spotify:track:2h1Xj6D76ygKS3tu9DgIY5","spotify:track:7k1Xm1wy00hCKJDYJL5p1n","spotify:track:1MQYA59Whe8zRBnGqgAvMP","spotify:track:2bYp7DYfjXULM24FUh9Z3Q","spotify:track:6tRSJPPrWs1hqOkllIJK9M","spotify:track:0zvNHIL7ci0ZzIoWU6RO2u","spotify:track:4TDX7TaAUcdb7Emfgh5Vif","spotify:track:30upl1YT1suEgSDpIopSky","spotify:track:5AgHGO8qE6Gf5HFaY1YHg9","spotify:track:4rQSLX4qMiUWL81hEQOuPY","spotify:track:4td6tN1J2QlESZyUhlD77m","spotify:track:0NBKvnJAAG865ENj9bOhvD","spotify:track:1yzyhrCfdwPgfWixsCELlH","spotify:track:5CwZU4BVFX0dyqG1gKfHHr","spotify:track:0suqXVpX1uJpSrmaDOnxwx","spotify:track:6EGRx5TVuHAsmy3JKb8SRC","spotify:track:3Fa7jdzVHdykpioJP1Qw7Z","spotify:track:50PU05RTGva8laKDwxED9Y","spotify:track:6stD0CS3QFs2yY3CoBfK8K","spotify:track:3xx0jE52PbtvwXgNaBUdch","spotify:track:6BkK5Dsu1kTne7Cn6EyYex","spotify:track:63fI8hzSrsXNGl0CMju2DW","spotify:track:56BG1hMSEkIN7IA2E4xNuN","spotify:track:0AbYscoIblUGiNqn2Iw6fq","spotify:track:4txNtoBnQ3OgazfeTS8iGP","spotify:track:7hU1CsIXvplis81SZJ6ESE","spotify:track:0qXUwQbZHFnhAGCgqwz2lR","spotify:track:7sNKhnl4MZnHdMzvmC4jG5","spotify:track:2RB2xSlVoMRhINO0SruNIx","spotify:track:4yXvztnOOlSspO4W3MIsdd","spotify:track:1zQBO3qNSeJVuHZTwZ7Wx6","spotify:track:4G9eIyEcVwLoG7kYNFpSII","spotify:track:2cD3pqgT9Yn4GUcGflMYdk","spotify:track:5i3m1HZBzurdMu9zzjBY7r","spotify:track:5jVGZTrDusSvwhRDPmZMSB","spotify:track:7A7gHOXvDJ12CRfiZ18Uro"],
  "offset": {
    "position":0
  },
  "position_ms": 0
}
games played 
songs played
songs right
progress how many right each day

let nums = usersGames.map((a)=>(a.category))
        let mostPlayedCategory = topKFrequent(nums,1)
        
        function topKFrequent(nums, k) {
            
            let hash = {}
        
            for (let num of nums) {
                if (!hash[num]) hash[num] = 0
                hash[num]++
            }
        
            const hashToArray = Object.entries(hash)
            const sortedArray = hashToArray.sort((a,b) => b[1] - a[1])
            const sortedElements = sortedArray.map(num => parseInt(num[0]))
            return sortedElements.slice(0, k)
        }


        //leave out the the api part 
        dont apologize
        

        <Message fluid
                    style={{backgroundColor:'', width:830, height:50}}>{songResponse.includes('!')?<Header class="ui block green header">{songResponse}</Header>:<Header class="ui block red header">{songResponse}</Header>}
            </Message>
        
                    <Message
                    style={{backgroundColor:'', width:830, marginTop:20, height:50}}>{artistResponse.includes('!')?<Header class="ui block green header">{artistResponse}</Header>:<Header class="ui block red header">{artistResponse}</Header>}
                    </Message>
       